@{
    ViewData["Title"] = "Adaptive";
}

<link href="~/css/grid/adaptive.css" rel="stylesheet" />

@section ControlsSection{
    <div class="col-lg-8 control-section">
        <div class="control-wrapper e-bigger e-adaptive-demo">
            <div class="e-mobile-layout">
                <div class="e-mobile-content">
                    <ejs-grid id="adaptivebrowser" dataSource="ViewBag.dataSource" enableAdaptiveUI="true" rowRenderingMode="Vertical" height="100%" allowPaging="true" allowFiltering="true" allowSorting="true" toolbar="@(new List<string>() { "Add", "Edit", "Delete", "Update", "Cancel", "Search" })" load="onLoad">
                        <e-grid-editSettings allowAdding="true" allowDeleting="true" allowEditing="true" mode="Dialog"></e-grid-editSettings>
                        <e-grid-filterSettings type="Excel"></e-grid-filterSettings>
                        <e-grid-pagesettings pageCount="3"></e-grid-pagesettings>
                        <e-grid-aggregates>
                            <e-grid-aggregate>
                                <e-aggregate-columns>
                                    <e-aggregate-column field="Freight" type="Sum" format="C2" footerTemplate="Sum:${Sum}"></e-aggregate-column>
                                </e-aggregate-columns>
                            </e-grid-aggregate>
                        </e-grid-aggregates>
                        <e-grid-columns>
                            <e-grid-column field="OrderID" headerText="Order ID" width="180" isPrimaryKey="true" validationRules="@(new { required=true, number=true})"></e-grid-column>
                            <e-grid-column field="Freight" headerText="Freight" format="C2" width="200"  editType="numericedit" validationRules="@(new { required=true})"></e-grid-column>
                            <e-grid-column field="CustomerID" headerText="Customer ID" width="180" validationRules="@(new { required=true})"></e-grid-column>
                            <e-grid-column field="ShipCity" headerText="Ship City" width="180"></e-grid-column>
                        </e-grid-columns>
                    </ejs-grid>
                </div>
            </div>
            <div class="e-desktop-layout">
                <ejs-grid id="adaptivedevice" dataSource="ViewBag.dataSource" enableAdaptiveUI="true" rowRenderingMode="Vertical" height="100%" allowPaging="true" allowFiltering="true" allowSorting="true" toolbar="@(new List<string>() { "Add", "Edit", "Delete", "Update", "Cancel", "Search" })" load="onLoad">
                    <e-grid-editSettings allowAdding="true" allowDeleting="true" allowEditing="true" mode="Dialog"></e-grid-editSettings>
                    <e-grid-filterSettings type="Excel"></e-grid-filterSettings>
                    <e-grid-pagesettings pageCount="3"></e-grid-pagesettings>
                    <e-grid-aggregates>
                        <e-grid-aggregate>
                            <e-aggregate-columns>
                                <e-aggregate-column field="Freight" type="Sum" format="C2" footerTemplate="Sum:${Sum}"></e-aggregate-column>
                            </e-aggregate-columns>
                        </e-grid-aggregate>
                    </e-grid-aggregates>
                    <e-grid-columns>
                        <e-grid-column field="OrderID" headerText="Order ID" width="180" isPrimaryKey="true" validationRules="@(new { required=true, number=true})"></e-grid-column>
                        <e-grid-column field="Freight" headerText="Freight" format="C2" width="200"  editType="numericedit" validationRules="@(new { required=true})"></e-grid-column>
                        <e-grid-column field="CustomerID" headerText="Customer ID" width="180" validationRules="@(new { required=true})"></e-grid-column>
                        <e-grid-column field="ShipCity" headerText="Ship City" width="180"></e-grid-column>
                    </e-grid-columns>
                </ejs-grid>
            </div>
        </div>
    </div>

    <div class="col-lg-4 property-section">
        <table id="property" title="Properties" style="width: 100%;">
            <tr>
                <td>
                    <div style="padding-left: 0px">Enable horizontal row mode</div>
                </td>
                <td>
                    <div>
                        <ejs-checkbox id="check" change="onChange"></ejs-checkbox>
                    </div>
                </td>
            </tr>
        </table>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            if (ej.base.Browser.isDevice) {
                document.getElementsByClassName('e-mobile-layout')[0].style.display = 'none';
            } else {
                document.getElementsByClassName('e-desktop-layout')[0].style.display = 'none';
            }
        });
        function onChange(e) {
            var grid;
            if (ej.base.Browser.isDevice && document.getElementById("adaptivedevice").classList.contains('e-grid')) {
                grid = document.getElementById("adaptivedevice").ej2_instances[0];
            } else {
                grid = document.getElementById("adaptivebrowser").ej2_instances[0];
            }
            if (e.checked) {
                grid.rowRenderingMode = 'Horizontal';
            } else {
                grid.rowRenderingMode = 'Vertical';
            }
        }

        function onLoad() {
            var grid;
            if (ej.base.Browser.isDevice && document.getElementById("adaptivedevice").classList.contains('e-grid')) {
                grid = document.getElementById("adaptivedevice").ej2_instances[0];
            } else {
                grid = document.getElementById("adaptivebrowser").ej2_instances[0];
            }
            grid.adaptiveDlgTarget = document.getElementsByClassName('e-mobile-content')[0];
        }
    </script>

    <style>
        /* The device with borders */
        .e-mobile-layout {
            position: relative;
            width: 360px;
            height: 640px;
            margin: auto;
            border: 16px #f4f4f4 solid;
            border-top-width: 60px;
            border-bottom-width: 60px;
            border-radius: 36px;
            box-shadow: 0 0px 2px rgb(144 144 144), 0 0px 10px rgb(0 0 0 / 16%);
        }
            /* The horizontal line on the top of the device */
            .e-mobile-layout:before {
                content: '';
                display: block;
                width: 60px;
                height: 5px;
                position: absolute;
                top: -30px;
                left: 50%;
                transform: translate(-50%, -50%);
                background: #ebebeb;
                border-radius: 10px;
            }

            /* The circle on the bottom of the device */
            .e-mobile-layout:after {
                content: '';
                display: block;
                width: 35px;
                height: 35px;
                position: absolute;
                left: 50%;
                bottom: -65px;
                transform: translate(-50%, -50%);
                background: #e8e8e8;
                border-radius: 50%;
            }

            /* The screen (or content) of the device */
            .e-mobile-layout .e-mobile-content {
                overflow-x: hidden;
                width: 328px;
                height: 521px;
                background: white;
                border: 0px solid #dddddd;
            }

            .highcontrast .e-mobile-layout {
                border: 16px #000000 solid;
                border-top-width: 60px;
                border-bottom-width: 60px;
                box-shadow: -1px 2px white, -2px -2px white, 2px -2px white, 2px 1px white;
            }
    </style>
}

@section ActionDescription{
    <div id="action-description">
        <p>
            This sample demonstrates the rendering order of the grid row elements and adaptive dialogs.
        </p>
    </div>
}

@section Meta{
    <meta name="description" content="This example demonstrates the GridLines in ASP.NET Core Data Grid control. Explore here for more details." />
}

@section Description{
    <div id="description">
        <p>
            The <code>enableAdaptiveUI</code> property is used to render the grid filter, sort and edit dialogs adaptively and
            <code>
                rowRenderingMode
            </code>
            property is used to render the grid row elements in the following directions,
        </p>
        <ul>
            <li><code>Horizontal</code> - Renders the grid row elements in the horizontal direction.</li>
            <li><code>Vertical</code> - Renders the grid row elements in the vertical direction.</li>
        </ul>
        <p>
            In this sample, you can change the row elements rendering direction by using the properties panel checkbox
        </p>
    </div>
}
@section Title{
    <title>ASP.NET Core Data Grid Adaptive Example - Syncfusion Demos </title>
}
@section Header{
    <h1 class='sb-sample-text'>Example of grid row elements rendering order and adaptive dialogs in ASP.NET Core Data Grid Control</h1>
}
