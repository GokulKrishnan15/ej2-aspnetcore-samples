@using Syncfusion.EJ2
@section ControlsSection{
    <div class="col-lg-8 control-section">
    <div class="content-wrapper" id="all-option-sample">
            <ejs-richtexteditor id="image" created="created" toolbarClick="onToolbarClick">
			    <e-content-template>
                    <div>
                        <p>Rich Text Editor allows inserting images from online sources as well as the local computers where you want to insert the image in your content.</p>
                        <p><b>Get started Quick Toolbar to click on the image</b></p>
                        <p>It is possible to add custom style on the selected image inside the RichTextEditor through the quick toolbar.</p>
                        <img alt='Logo' style='width: 300px; height: 300px; transform: rotate(0deg);' src='@Url.Content("~/images/RichTextEditor/RTEImage-Feather.png")' />
                    </div>
                </e-content-template>
                <e-richtexteditor-quicktoolbarsettings image="@ViewBag.image"></e-richtexteditor-quicktoolbarsettings>
            </ejs-richtexteditor>
    </div>
</div>
<div class="col-lg-4 property-section" id="all-option-table">
    <div>
        <table id="property" title="Properties">
            <tbody>
                <tr>
                    <td style="width: 50%">
                        <div>Enable AutoUrl</div>
                    </td>
                    <td style="width: 50%;padding-right: 10px">
                        <div style="padding-left: 0;padding-top: 0">
                            <ejs-checkbox id="readonly" checked="false" change="readOnly_onChange"></ejs-checkbox>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>
                        <div>Save Format</div>
                    </td>
                    <td>
                        <div>
                            <ejs-dropdownlist id="formatOption" dataSource="@ViewBag.data" index="0" popupHeight="200px" change="formatChange">
                                <e-dropdownlist-fields text="Format" value="Id"></e-dropdownlist-fields>
                            </ejs-dropdownlist>
                        </div>
                    </td>
                </tr>



            </tbody>
        </table>
    </div>
</div>

    <style>
        .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-left::before {
        content: "\e341";
    }

    .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-right::before {
        content: "\e354";
    }

    .bootstrap4 .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-left::before {
        content: "\e752";
    }

    .bootstrap4 .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-right::before {
        content: "\e778";
    }

    </style>

    <script type="text/javascript">
         var rteObj;
    function created() {
        rteObj = this;
    }
    function formatChange() {
        if (formatOption.value === 'Base64') {
            rteObj.insertImageSettings.saveFormat = 'Base64';
        } else {
            rteObj.insertImageSettings.saveFormat = 'Blob';
        }

        rteObj.dataBind();
    }
    function readOnly_onChange(args) {
        rteObj.enableAutoUrl = args.checked;
    }
    function onToolbarClick(e) {
        var nodeObj = new ej.richtexteditor.NodeSelection();
        var range = nodeObj.getRange(rteObj.contentModule.getDocument());
        var imgEle = nodeObj.getNodeCollection(range)[0];
        var transform;
        if (e.item && e.item.tooltipText === 'Rotate Right') {
            transform = (imgEle.style.transform === '') ? 0 :
                parseInt(imgEle.style.transform.split('(')[1].split(')')[0], 10);
            imgEle.style.transform = 'rotate(' + (transform + 90) + 'deg)';
            rteObj.formatter.saveData();
            rteObj.formatter.enableUndo(rteObj);
        }
        else if (e.item && e.item.tooltipText === 'Rotate Left') {
            transform = (imgEle.style.transform === '') ? 0 :
                Math.abs(parseInt(imgEle.style.transform.split('(')[1].split(')')[0], 10));
            imgEle.style.transform = 'rotate(-' + (transform + 90) + 'deg)';
            rteObj.formatter.saveData();
            rteObj.formatter.enableUndo(rteObj);
        }
    }
</script>


    </script>
}

@*custom code start*@

@section Meta{
                    <meta name="description" content="This example demonstrates the Image in ASP.NET Core Rich Text Editor control. Explore here for more details."/>
                }

@*custom code end*@

@section ActionDescription{
    <div id="action-description">
        <p>
            This sample demonstrates the option to insert the image to the Rich Text Editor content. Click the image button from the
            toolbar item to insert the image.
        </p>
    </div>
}
@section Description{
    <div id="description">
        <p>
            Image tools used to insert an image to the Rich Text Editor and click on the image to easily customize the image using quick toolbar.
            The quick toolbar has the following items
        </p>
        <ul>
            <li><code>Replace</code> – can replace the image with some other image.</li>
            <li><code>Align</code> – Align the image with left, right and justify.</li>
            <li><code>Image captions</code> – set the captions for the image.</li>
            <li><code>Change size</code> – modify width and height of image.</li>
            <li><code>Delete</code> – delete the image.</li>
            <li><code>Link</code> – provide the link to the image.</li>
            <li><code>Display</code> - display the image as inline or with break.</li>
            <li><code>Alternate text</code> – provide the alternative text for the image if the image is not present in the location.</li>
            <li><code>Custom Tools</code> - "rotation" related commands are added as custom commands to the image element</li>
            <li><code>Resize</code> – can resize the image dimension with resize options.</li>
        </ul>
        Quick commands are opened as context-menu on clicking the corresponding element.
        The commands must be passed as string collection to image, text, and link attributes of the quickToolbarSettings property.

    </div>
}
@section Title{
                    <title>ASP.NET Core Rich Text Editor Image Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Image in ASP.NET Core Rich Text Editor Control</h1>
                }