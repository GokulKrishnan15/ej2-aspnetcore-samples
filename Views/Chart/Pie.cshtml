@using Syncfusion.EJ2
@section ControlsSection{
    @{
        var piecenter = new
        {
            x = "50%",
            y = "50%"
        };

    }
    <div class="control-section col-lg-9" align='center'>
        <ejs-accumulationchart id="container" title="Mobile Browser Statistics" load="load" enableAnimation="false">
            <e-accumulationchart-center x="50%" y="50%"></e-accumulationchart-center>
            <e-accumulationchart-tooltipsettings enable="true"></e-accumulationchart-tooltipsettings>
            <e-accumulationchart-legendsettings visible="false">
            </e-accumulationchart-legendsettings>
            <e-accumulation-series-collection>
                <e-accumulation-series dataSource="ViewBag.dataSource" xName="xValue" yName="yValue" name="Browser" radius="70%" startAngle="0" endAngle="360" explodeIndex="5" explode="true" explodeOffset="10%">
                    <e-accumulationseries-datalabel name="text" visible="true">
                        <e-font fontWeight="600"></e-font>
                    </e-accumulationseries-datalabel>
                </e-accumulation-series>
            </e-accumulation-series-collection>
        </ejs-accumulationchart>
    </div>
    <div class="col-lg-3 property-section">
        <table id="property" title="Properties" style="width: 100%">
            <tbody>
                <tr style="height: 50px">
                    <td style="width: 50%">
                        <div>
                            Pie Angle
                        </div>
                    </td>
                    <td style="width: 40%;">
                        <div data-role="rangeslider">
                            <input type="range" name="range-min" id="pieangle" value="0" min="0" max="360" style="width:90%">
                        </div>
                    </td>
                    <td style="width: 30%;">
                        <p id="anglevalue" style="font-weight: normal;padding-top:15px">0</p>
                    </td>
                </tr>
                <tr style="height: 50px">
                    <td style="width: 30%">
                        <div>
                            Outer Radius
                        </div>
                    </td>
                    <td style="width: 40%;">
                        <div data-role="rangeslider">
                            <input type="range" name="range-min" id="pieradius" value="70" min="0" max="80" style="width:90%">
                        </div>
                    </td>
                    <td style="width: 30%;">
                        <p id="radius" style="font-weight: normal;padding-top:15px">0.70</p>
                    </td>
                </tr>
                <tr style="height: 50px">
                    <td style="width: 30%">
                        <div>
                            Explode Radius
                        </div>
                    </td>
                    <td style="width: 40%;">
                        <div data-role="rangeslider">
                            <input type="range" name="range-min" id="pieexploderadius" value="10" min="0" max="40" style="width:90%">
                        </div>
                    </td>
                    <td style="width: 30%;">
                        <p id="exploderadius" style="font-weight: normal;padding-top:15px">0.10</p>
                    </td>
                </tr>
                <tr style="height: 50px">
                    <td style="width: 30%">
                        <div>
                            Explode Index
                        </div>
                    </td>
                    <td style="width: 70%;">
                        <div data-role="rangeslider">
                            <input type="range" name="range-min" id="pieexplodeindex" value="5" min="0" max="5" style="width:90%">
                        </div>
                    </td>
                    <td style="width: 30%;">
                        <p id="explodeindex" style="font-weight: normal;padding-top:15px">5</p>
                    </td>
                </tr>
                <tr style="height: 50px">
                    <td style="width: 30%">
                        <div>
                            Center X
                        </div>
                    </td>
                    <td style="width: 70%;">
                        <div data-role="rangeslider">
                            <input type="range" name="range-min" id="x" value="50" min="0" max="100" style="width:90%">
                        </div>
                    </td>
                    <td style="width: 60%;">
                        <div data-role="rangeslider">
                            <p id="xvalue" style="font-weight: normal;padding-top:10px;">50%</p>
                        </div>
                    </td>
                </tr>
                <tr style="height: 50px">
                    <td style="width: 30%">
                        <div>
                            Center Y
                        </div>
                    </td>
                    <td style="width: 70%;">
                        <div data-role="rangeslider">
                            <input type="range" name="range-min" id="y" value="50" min="0" max="100" style="width:90%">
                        </div>
                    </td>
                    <td style="width: 60%;">
                        <div data-role="rangeslider">
                            <p id="yvalue" style="font-weight: normal;padding-top:10px;">50%</p>
                        </div>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
    <script>
        function load(args) {
            var indexedTheme = location.hash.split('/')[1];
            indexedTheme = indexedTheme ? indexedTheme : 'Material';
            args.accumulation.theme = (indexedTheme.charAt(0).toUpperCase() + indexedTheme.slice(1).replace(/dark/i, "Dark").replace(/light/i, "Light"));
        }
        function anglechange(value) {
            var pie = document.getElementById("container").ej2_instances[0];
            pie.series[0].startAngle = +value;
            pie.series[0].endAngle = +value;
            document.getElementById('anglevalue').innerHTML = value.toString();
            pie.removeSvg();
            pie.refreshSeries();
            pie.refreshChart();
        }

        document.getElementById('pieangle').onpointermove = document.getElementById('pieangle').ontouchmove =
            document.getElementById('pieangle').onchange = (e) => {
                anglechange(+(document.getElementById('pieangle')).value);
            };
        function radiuschange(value) {
            var pie = document.getElementById("container").ej2_instances[0];
            pie.series[0].radius = value + '%';
            document.getElementById('radius').innerHTML = (value / 100).toFixed(2);
            pie.removeSvg();
            pie.refreshSeries();
            pie.refreshChart();
        }

        document.getElementById('pieradius').onpointermove = document.getElementById('pieradius').ontouchmove =
            document.getElementById('pieradius').onchange = (e) => {
                radiuschange(+(document.getElementById('pieradius')).value);
            };
        function exploderadius(value) {
            var pie = document.getElementById("container").ej2_instances[0];
            pie.series[0].explodeOffset = value + '%';
            pie.series[0].animation.enable = false;
            document.getElementById('exploderadius').innerHTML = (value / 100).toFixed(2);
            pie.removeSvg();
            pie.refreshSeries();
            pie.refreshChart();
        }

        document.getElementById('pieexploderadius').onpointermove = document.getElementById('pieexploderadius').ontouchmove =
            document.getElementById('pieexploderadius').onchange = (e) => {
                exploderadius(+(document.getElementById('pieexploderadius')).value);
            };
        function explodeIndex(value) {
            var pie = document.getElementById("container").ej2_instances[0];
            pie.visibleSeries[0].explodeIndex = +value;
            document.getElementById('explodeindex').innerHTML = value.toString();
            pie.removeSvg();
            pie.refreshSeries();
            pie.refreshChart();
        }

        document.getElementById('pieexplodeindex').onpointermove = document.getElementById('pieexplodeindex').ontouchmove =
            document.getElementById('pieexplodeindex').onchange = (e) => {
                explodeIndex(+(document.getElementById('pieexplodeindex')).value);
            };
        function xchange(value) {
            var pie = document.getElementById("container").ej2_instances[0];
            pie.center.x = value + '%';
            document.getElementById('xvalue').innerHTML = value + '%';
            pie.removeSvg(); pie.refreshSeries(); pie.refreshChart();
        }
        document.getElementById('x').onpointermove = document.getElementById('x').ontouchmove =
            document.getElementById('x').onchange = function (e) {
                xchange(+(document.getElementById('x')).value);
            };
        function ychange(value) {
            var pie = document.getElementById("container").ej2_instances[0];
            pie.center.y = value + '%';
            document.getElementById('yvalue').innerHTML = value + '%';
            pie.removeSvg(); pie.refreshSeries(); pie.refreshChart();
        }
        document.getElementById('y').onpointermove = document.getElementById('y').ontouchmove =
            document.getElementById('y').onchange = function (e) {
                ychange(+(document.getElementById('y')).value);
            };

    </script>
}
@*custom code start*@
@section Meta{
    <meta name="description" content="This example demonstrates the Pie in ASP.NET Core Chart control. Explore here for more details." />
}
@*custom code end*@
@section ActionDescription{

    <div id="action-description">
        This sample demonstrates pie chart for mobile browser usage statistics. Datalabel shows the Information about the points.
    </div>
}
@section Description {
    <div id="description">
        In this example, you can see how to render and configure the pie chart. You can use <code>border</code>, <code>fill</code> properties to customize the pie point. <code>dataLabel</code> is used to represent individual data and its value.

        Tooltip is enabled in this example, to see the tooltip in action, hover a point or tap on a point in touch enabled devices.
    </div>

}
@section Title{
    <title>ASP.NET Core Chart Pie Example - Syncfusion Demos </title>
}
@section Header{
    <h1 class='sb-sample-text'>Example of Pie in ASP.NET Core Chart Control</h1>
}