@using Syncfusion.EJ2
@section ControlsSection{
    @{
       var DragXY = "DragXY";
    }
    <div class="control-section col-md-8" align="center">
        <ejs-chart id="container" title="Profit Comparision of A and B" load="load" selectionMode="DragXY">
            <e-chart-primaryxaxis minimum="1970" maximum="2016" >
                <e-majorgridlines width="0"></e-majorgridlines>
            </e-chart-primaryxaxis>
            <e-chart-primaryyaxis minimum="0" maximum="100" interval="25" title="Sales" labelFormat="{value}%">
                <e-majorgridlines width="0"></e-majorgridlines>
            </e-chart-primaryyaxis>
            <e-series-collection>
                <e-series dataSource="ViewBag.dataSource" name="Product A" xName="x" opacity="1" yName="y1" type="@Syncfusion.EJ2.Charts.ChartSeriesType.Scatter">
                    <e-series-marker height="10" width="10" shape="Triangle"></e-series-marker>
                </e-series>
                <e-series dataSource="ViewBag.dataSource" name="Product B" xName="x" opacity="1" yName="y2" type="@Syncfusion.EJ2.Charts.ChartSeriesType.Scatter">
                    <e-series-marker height="10" width="10" shape="Pentagon"></e-series-marker>
                </e-series>
            </e-series-collection>
            <e-chart-chartarea>
                <e-chartarea-border width="0"></e-chartarea-border>
            </e-chart-chartarea>
            <e-chart-legendsettings visible="true" toggleVisibility="false"></e-chart-legendsettings>
        </ejs-chart>
    </div>
    <div class="col-md-4 property-section">
        <table id="property" title="Properties" style="width: 100%">
            <tbody>
                <tr style="height: 50px">
                    <td style="width: 60%">
                        <div>Selection Mode:</div>
                    </td>
                    <td style="width: 40%;">
                        <ejs-dropdownlist id="data" dataSource="@ViewBag.data" change="onChange" value="DragXY" popupHeight="220px"></ejs-dropdownlist>
                    </td>
                </tr>
                 <tr id="" style="height: 50px">
                    <td>
                        <div> Enable Multi Selection:</div>
                    </td>
                    <td>
                        <input type="checkbox" id="select" style="margin-top: 15px">
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
    <script>
    @*custom code start*@
        function load(args) {
            var indexedTheme = location.hash.split('/')[1];
            indexedTheme = indexedTheme ? indexedTheme : 'Material';
            args.chart.theme = (indexedTheme.charAt(0).toUpperCase() + indexedTheme.slice(1).replace(/dark/i, "Dark").replace(/light/i, "Light"));
        }
    @*custom code end*@
        function onChange(args) {
            var chart = document.getElementById('container').ej2_instances[0];
            chart.selectionMode = this.value;
            chart.series[0].animation.enable = false;
            chart.series[1].animation.enable = false;
            chart.refresh();
        }
        document.getElementById('select').onchange = () => {
            var chart = document.getElementById('container').ej2_instances[0];
            var element = (document.getElementById('select'));
            chart.allowMultiSelection = element.checked;
            chart.series[0].animation.enable = false;
            chart.series[1].animation.enable = false;
            chart.refresh();
        };
    </script>

}
@section Meta{
                    <meta name="description" content="This example demonstrates the Range Selection in ASP.NET Core Chart control. Explore here for more details."/>
                }
@section ActionDescription{
    <div id="action-description">
        <p>
            This sample illustrates the range selection feature in chart. Data can be selected under region by drag and drop.
        </p>
    </div>
}
@section Description{
    <div id="description">
        <p>
            This sample demonstrates the selection behavior in a chart. Any point or a series can be selected in a chart by clicking or touching the point.
            We can also select the point while loading chart through <code>selectedDataIndexes</code> properties. Click to select a point or series, click and drag to enable rectangular selection.
            Rectangular selection will return the collection point that are selected under the region.
        </p>
        <p>
            Tap to select a point or series, double tap and drag to enable rectangular selection in touch enabled devices.
        </p>
        <p>
            Chart supports five mode of selection which can be set using <code>SelectionMode</code> property.
        </p>
        <ul>
            <li><code>Series</code> - Select the series in chart.</li>
            <li><code>Point</code> - Select a point in the series .</li>
            <li><code>Cluster</code> - Select a group of points in the chart.</li>
            <li><code>DragXY</code> - Rectangular selection with respect to both axis.</li>
            <li><code>DragX</code> - Rectangular selection with respect to horizontal axis.</li>
            <li><code>DragY</code> - Rectangular selection with respect to vertical axis.</li>
        </ul>
        <br />
      
    </div>

}
@section Title{
                 <title>ASP.NET Core Chart Range Selection Example - Syncfusion Demos </title>
             }
@section Header{
                <h1 class='sb-sample-text'>Example of Range Selection in ASP.NET Core Chart Control</h1>
            }