@using Syncfusion.EJ2
@section ControlsSection{
    @{

        var Linear = "Linear";
        var value = 1;
    }
    <div class="col-md-8 control-section" align="center">
        <ejs-chart id="container" load="window.onChartLoad" title="Historical Indian Rupee Rate (INR USD)">
            <e-chart-chartarea>
                <e-chartarea-border width="0"></e-chartarea-border>
            </e-chart-chartarea>
            <e-chart-primaryxaxis edgeLabelPlacement="Shift">
                <e-majorgridlines width="0"></e-majorgridlines>
            </e-chart-primaryxaxis>
            <e-chart-primaryyaxis interval="10" title="Rupees against Dollars" >
                <e-majorticklines width="0"></e-majorticklines>
                <e-linestyle width="0"></e-linestyle>
            </e-chart-primaryyaxis>
            <e-series-collection>
                <e-series name="Rupees" xName="x" yName="y" type="@Syncfusion.EJ2.Charts.ChartSeriesType.Spline">
                    <e-series-marker visible="true"></e-series-marker>
                    <e-series-trendlines>
                        <e-trendline type="Linear" width="3" name="Trends" fill="#C64A75">
                            <e-trendline-marker visible="false"></e-trendline-marker>
                        </e-trendline>
                    </e-series-trendlines>
                </e-series>
            </e-series-collection>
            <e-chart-tooltipsettings enable="true"></e-chart-tooltipsettings>
            <e-chart-legendsettings visible="true"></e-chart-legendsettings>
        </ejs-chart>
    </div>
    <div class="col-md-4 property-section">
        <table id="property" title="Properties" style="width: 100%">
            <tr style="height: 50px">
                <td style="width: 50%">
                    <div>
                        TrendLine Type:
                    </div>
                </td>
                <td style="width: 50%;">
                    <ejs-dropdownlist id="type" dataSource="@ViewBag.type" value="Linear" change="change" index="0" popupHeight="220px"></ejs-dropdownlist>
                </td>
            </tr>
            <tr id='' style="height: 50px">
                <td style="width: 80%">
                    <div> Forward Forecast:</div>
                </td>
                <td style="width: 20%;">
                    <ejs-numerictextbox id="forward" min="1" max="20" step="1" value="value" width="120" change="forward"></ejs-numerictextbox>
                </td>
            </tr>
            <tr id='' style="height: 50px">
                <td style="width: 80%">
                    <div>Backward Forecast:</div>
                </td>
                <td style="width: 20%;">
                    <ejs-numerictextbox id="backward" min="1" max="20" step="1" value="value" width="120" change="backward"></ejs-numerictextbox>
                </td>
            </tr>
            <tr id='' style="height: 50px">
                <td style="width: 80%">
                    <div>Polynomial Order:</div>
                </td>
                <td style="width: 20%;">
                    <ejs-numerictextbox id="polynomial" min="1" max="20" step="1" value="0" width="120" change="polynomial" enabled="false"></ejs-numerictextbox>
                </td>
            </tr>
            <tr id='' style="height: 50px">
                <td style="width: 80%">
                    <div>Period:</div>
                </td>
                <td style="width: 20%;">
                    <ejs-numerictextbox id="period" min="1" max="20" step="1" value="0" width="120" change="period" enabled="false"></ejs-numerictextbox>
                </td>
            </tr>
        </table>
    </div>
    <script>
        window.onChartLoad = function (args) {
            var selectedTheme = location.hash.split("/")[1];
            var series1 = [];
            var yValue = [7.66, 8.03, 8.41, 8.97, 8.77, 8.20, 8.16, 7.89, 8.68, 9.48, 10.11, 11.36, 12.34, 12.60, 12.95,
                13.91, 16.21, 17.50, 22.72, 28.14, 31.26, 31.39, 32.43, 35.52, 36.36,
                41.33, 43.12, 45.00, 47.23, 48.62, 46.60, 45.28, 44.01, 45.17, 41.20, 43.41, 48.32, 45.65, 46.61, 53.34, 58.53];
            var point1;
            var i;
            var j = 0;
            for (i = 1973; i <= 2013; i++) {
                point1 = { x: i, y: yValue[j] };
                series1.push(point1);
                j++;
            }
            var powerData = [
                { x: 1, y: 10 }, { x: 2, y: 50 }, { x: 3, y: 80 }, { x: 4, y: 110 },
                { x: 5, y: 180 }, { x: 6, y: 220 }, { x: 7, y: 300 }, { x: 8, y: 370 }, { x: 9, y: 490 }, { x: 10, y: 500 }
            ];
            var dropdown = document.getElementById('type');
            if (dropdown.value === 'Power') {
                args.chart.series[0].dataSource = powerData;
            } else {
                args.chart.series[0].dataSource = series1;
            }
            selectedTheme = selectedTheme ? selectedTheme : "Material";
            args.chart.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1).replace(/dark/i, "Dark").replace(/light/i, "Light"));
        }
        function polynomial() {
            var chart = document.getElementById('container').ej2_instances[0];
            chart.series[0].animation.enable = false;
            chart.series[0].trendlines[0].polynomialOrder = this.value;
            chart.refresh();
        }
        function period() {
            var chart = document.getElementById('container').ej2_instances[0];
            chart.series[0].animation.enable = false;
            chart.series[0].trendlines[0].period = this.value;
            chart.refresh();
        }
        function change() {
            var chart = document.getElementById('container').ej2_instances[0];
            chart.series[0].animation.enable = false;
            chart.series[0].trendlines[0].type = this.value;
            chart.series[0].trendlines[0].name = this.value;
            var forwardForecast;
            var backwardForecast;
            var polynomialOrder;
            var period;
            if (this.value !== 'Power') {
                chart.series[0].name = 'Rupees';
                chart.primaryXAxis.title = '';
                chart.primaryYAxis.interval = 10;
                chart.primaryYAxis.title = 'Rupees against Dollars';
                chart.title = 'Historical Indian Rupee Rate (INR USD)';
                if (this.value === 'MovingAverage') {
                    chart.series[0].trendlines[0].marker.visible = false;
                }
            }
            else {
                chart.series[0].name = 'Meters';
                chart.primaryXAxis.title = 'Seconds';
                chart.primaryYAxis.title = 'Meters';
                chart.primaryYAxis.interval = 100;
                chart.title = 'Distance Measurement';
            }
            if (this.value !== 'Polynomial' && this.value !== 'MovingAverage') {
                period = polynomialOrder = true;
                forwardForecast = backwardForecast = false;
            }
            else if (this.value === 'MovingAverage') {
                period = false;
                forwardForecast = backwardForecast = polynomialOrder = true;
            }
            else {
                forwardForecast = backwardForecast = polynomialOrder = false;
                period = true;
            }
            var forward = document.getElementById('forward').ej2_instances[0];
            var backward = document.getElementById('backward').ej2_instances[0];
            var polynomial = document.getElementById('polynomial').ej2_instances[0];
            var periodValue = document.getElementById('period').ej2_instances[0];

            forward.enabled = !forwardForecast;
            backward.enabled = !backwardForecast;
            polynomial.enabled = !polynomialOrder;
            periodValue.enabled = !period;
            chart.refresh();

        }
        function forward() {
            var chart = document.getElementById('container').ej2_instances[0];
            var forward = document.getElementById("forward").ej2_instances[0];
            chart.series[0].trendlines[0].forwardForecast = forward.value;
            chart.series[0].animation.enable = false;
            chart.refresh();
        }
        function backward() {
            var chart = document.getElementById('container').ej2_instances[0];
            var backward = document.getElementById("backward").ej2_instances[0];
            chart.series[0].trendlines[0].backwardForecast = backward.value;
            chart.series[0].animation.enable = false;
            chart.refresh();
        }
    </script>
}
@*custom code start*@
@section Scripts {

}

<style>
    #control-container {
        padding: 0px !important;
    }

    #container_Series_0_TrendLine_0 {
        stroke-dasharray: 10px 10px;
        stroke-linejoin: round;
        stroke-linecap: round;
        -webkit-animation: dash 1s linear infinite;
        animation: dash 1s linear infinite;
    }

    @@-webkit-keyframes dash {
        100% {
            stroke-dashoffset: -20px;
        }
    }

    @@keyframes dash {
        100% {
            stroke-dashoffset: -20px;
        }
    }
</style>
@section Meta{
                    <meta name="description" content="This example demonstrates the Trendlines in ASP.NET Core Chart control. Explore here for more details."/>
                }
@*custom code end*@
@section ActionDescription{
    <p>
        his sample visualizes the trend of Indian rupees and US dollar variation with trendline in the chart.
        The type of trend line can be changed by using <code>TrendLine Type</code>, forward and backward forecasting of trendlines can be changed by <code>Forward Forecasting</code> and <code>Backward Forecast</code> respectively.
        Polynomial and period for a trendlines can be changed by using <code>Polynomial order</code> and <code>Period</code>.
    </p>
}
@section Description{
    <p>
        In this example, you can see how to render and configure the Trend Lines. You can use
        <code>border</code>,
        <code>fill</code> properties to customize the area.
    </p>
    <p>
        Tooltip is enabled in this example, to see the tooltip in action, hover a point or tap on a point in touch enabled devices.
    </p>


    <p>
        More information on the Trend Lines can be found in this
        <a target="_blank" href="http://ej2.syncfusion.com/documentation/chart/api-series.html#type-chartseriestype">documentation section</a>.
    </p>
}
@section Title{
                 <title>ASP.NET Core Chart Trendlines Example - Syncfusion Demos </title>
             }
@section Header{
                <h1 class='sb-sample-text'>Example of Trendlines in ASP.NET Core Chart Control</h1>
            }